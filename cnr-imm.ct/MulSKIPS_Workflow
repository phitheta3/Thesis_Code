# MulSKIPS PVD Workflow for 3C-SiC

This repository provides a full Python-based workflow to simulate and analyze **Physical Vapor Deposition (PVD)** processes on 3C-SiC substrates using the atomic-scale simulator [MulSKIPS](https://github.com/MulSKIPS). The workflow includes simulation execution, post-processing, and export of results in **FAIR-compliant NeXus format** (`.nxs`) according to **FAIRmat** standards.

## Overview

The workflow covers:

- ‚úÖ Execution of PVD simulations with MulSKIPS  
- üìä Automated analysis of growth rate, surface roughness, and vacancy concentration  
- üìÅ Export to NeXus format conforming to `NXmicrostructure_imm_config` and `NXmicrostructure_imm_results` (FAIRmat)

## Project Structure

```

.
‚îú‚îÄ‚îÄ run\_PVD\_SiC.py              # Script to launch MulSKIPS simulation
‚îú‚îÄ‚îÄ analyze\_PVD\_SiC.py          # Post-processing and analysis script
‚îú‚îÄ‚îÄ Parser\_MAy-2.ipynb          # Jupyter notebook automating full pipeline
‚îú‚îÄ‚îÄ SiC\_sample\_153.nxs          # Example output file (FAIRmat-compliant)
‚îú‚îÄ‚îÄ input\_files/                # Input geometries and simulation parameters
‚îú‚îÄ‚îÄ results/                    # Output: .xyz, logs, surface/growth data
‚îî‚îÄ‚îÄ README.md

````

## Requirements

- Python ‚â• 3.8  
- Python packages: `numpy`, `pandas`, `matplotlib`, `h5py`  
- [MulSKIPS](https://github.com/MulSKIPS) compiled from source  
- FAIRmat NeXus definitions (`NXmicrostructure_imm_config`, `NXmicrostructure_imm_results`)

Install dependencies with:

```bash
pip install -r requirements.txt
````

## Setup

1. **Clone and compile MulSKIPS**:

```bash
git clone https://github.com/MulSKIPS/MulSKIPS.git
cd MulSKIPS
make all
```

2. **Configure paths**:

   * Set the path to the MulSKIPS executable in `run_PVD_SiC.py`
   * Adjust input/output folder paths as needed

## How to Use

### 1. Run a PVD Simulation

```bash
python run_PVD_SiC.py --sample_id 153 --lenx 60 --leny 60 --lenz 960 \
                      --gr 287 --TotTime 0.39 --randseed 9117116
```

### 2. Analyze the Simulation Output

```bash
python analyze_PVD_SiC.py --input_dir results/sample_153/
```

The analysis includes:

* **Growth rate** (spline, polyfit, or finite difference methods)
* **Surface roughness** in microns
* **Vacancy types and concentrations** (SV, CV, SAV, CAV, XV)

### 3. Generate FAIR NeXus Output

Open and run `Parser_MAy-2.ipynb` to:

* Parse data from `surf_height.txt`, `results.txt`, and `.xyz` files
* Build a NeXus `.nxs` file embedding simulation config and results
* Conform to FAIRmat schemas: `NXmicrostructure_imm_config` and `NXmicrostructure_imm_results`

## Output Files

| File              | Description                              |
| ----------------- | ---------------------------------------- |
| `results.txt`     | Growth rate, roughness, and vacancy data |
| `runlog.txt`      | Full simulation log                      |
| `surf_height.txt` | Time-resolved surface height profile     |
| `I*.xyz`          | Atomic configurations at each time step  |
| `*.nxs`           | FAIRmat-compliant NeXus output           |

## Citation

If you use this workflow, please cite:

* **MulSKIPS**: Fisicaro et al., *Phys. Rev. Materials* **4**, 2020
* **FAIRmat**: Wilkinson et al., *Scientific Data* **3**, 2016

A `bibtex.bib` file with full references is provided in the repository.

## License

This project is licensed under the MIT License. See `LICENSE`.

## Acknowledgements

Developed as part of the FAIR data initiative for materials science:

* [CNR-IMM@CT](https://www.imm.cnr.it/)
* [FAIRmat Project](https://www.fairmat-nfdi.eu/)

```

